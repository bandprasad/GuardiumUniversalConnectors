# -- Date Modified : 11/2/2023
# --  TO DO : 
# ---   1. Fix the [data][sentences] structure in  [GuardRecord] to remove the [0]
# --    2. Populate the verb and object name fields properly

input {
  kafka {
    bootstrap_servers => "<<BOOT_STRAP_SERVER_DETAILS_HERE>>"
    client_dns_lookup => "use_all_dns_ips"
    jaas_path => "<<PATH_TO_JAAS_CONF_FILE>>"
    client_id => "<<CLIENT_ID>>"
    group_id => "<<GROUP_ID>>"
    ssl_truststore_location => "<<TRUST_STORE_JKS_FILE_LOCATION>>"
    ssl_truststore_password => "<<TRUST_STORE_PASSWORD>>"
    security_protocol => "SASL_SSL"
    sasl_mechanism => "SCRAM-SHA-512"
    id => "<<ID_HERE>>"
    partition_assignment_strategy => "cooperative_sticky"
    codec => "json"
    decorate_events => "basic"
    topics => [ "hadoop_hdfs_audit" ]
  }
}

filter {

  mutate {
    add_field => { "[event][module]" => "hadoop" }
    add_field => { "[event][dataset]" => "hadoop.hdfs_audit" }
    remove_tag => [ "_jsonparsefailure"]
  }
  grok {
        match => { "[event][original]" => "^(?<[event][created]>\d+-\d+-\d+\s\d+:\d+:\d+,\d+) \w+ (?<[event][kind]>.*?):\s+(?<tmp>.*)$" }
		tag_on_failure => "_grokparsefailure_to_tmp"
  }
  mutate {
    gsub => [
      "tmp", '\"', '"'
	  ]
  }
  kv {
    source => "tmp"
    target => "tmp_kv"
    tag_on_failure => "_kv_filter_error"
	field_split_pattern => "\t+"
	value_split => "="
  }
  grok {
        match => { "[tmp_kv][ugi]" => "^(?<[user][name]>.*?)\s" }
		tag_on_failure => "_grokparsefailure_user"
  }
  mutate {
  # rename => { "[fields][environment]" => "[database][instance]" }
  # rename => { "[tmp_kv][cmd]" => "[process][command_line]" }
  rename => { "[tmp_kv][src]" => "[url][path]" }
  rename => { "[tmp_kv][dst]" => "[file][target_path]" }
  rename => { "[tmp_kv][perm]" => "[event][code]" }
  rename => { "[tmp_kv][ip]" => "[source][ip]" }
  rename => { "[tmp_kv][proto]" => "[network][protocol]" }
  gsub => [ "[source][ip]", "/", "" ]
  }
  
# Top level Fields  -- BEGIN 
  mutate {
    add_field => { "[GuardRecord][sessionId]" => "" }    
    add_field => { "[GuardRecord][appUserName]" => "" }
    add_field => { "[GuardRecord][dbName]" => "%{[fields][environment]}" }
    # Top level Fields  -- END

    # accessor Fields  -- BEGIN 
    add_field => { "[GuardRecord][accessor][osUser]" => "" }
    add_field => { "[GuardRecord][accessor][client_mac]" => "" }
    add_field => { "[GuardRecord][accessor][clientHostName]" => "" }
    add_field => { "[GuardRecord][accessor][clientOs]" => "" }
    add_field => { "[GuardRecord][accessor][commProtocol]" => "%{[network][protocol]}" }
    add_field => { "[GuardRecord][accessor][dataType]" => "CONSTRUCT" }
    add_field => { "[GuardRecord][accessor][dbProtocol]" => "Apache Kafka" }
    add_field => { "[GuardRecord][accessor][dbProtocolVersion]" => "" }
    add_field => { "[GuardRecord][accessor][language]" => "FREE_TEXT" }
    add_field => { "[GuardRecord][accessor][serverDescription]" => "" }
    add_field => { "[GuardRecord][accessor][serverHostName]" => "ApacheKafka" }  
    add_field => { "[GuardRecord][accessor][serverOs]" => "" }
    add_field => { "[GuardRecord][accessor][serverType]" => "HDFS" }
    add_field => { "[GuardRecord][accessor][sourceProgram]" => "" }
    add_field => { "[GuardRecord][accessor][dbUser]" => "%{[user][name]}" }
    # accessor Fields  -- END 

    # sessionLocator Fields  -- BEGIN 
    add_field => { "[GuardRecord][sessionLocator][clientIpv6]" => "null" }
    add_field => { "[GuardRecord][sessionLocator][isIpv6]" => "false" } 
    add_field => { "[GuardRecord][sessionLocator][serverIp]" => "0.0.0.0" }
    add_field => { "[GuardRecord][sessionLocator][serverIpv6]" => "null" }
    add_field => { "[GuardRecord][sessionLocator][serverPort]" => "-1" }	 
    add_field => { "[GuardRecord][sessionLocator][clientPort]" => "-1" }	 

    add_field => { "[GuardRecord][sessionLocator][clientIp]" => "%{[source][ip]}" }			     
    # sessionLocator Fields  -- END 

    # exception Fields  -- BEGIN 
   # add_field => { "[GuardRecord][exception][description]" => "NA" }
   # add_field => { "[GuardRecord][exception][exceptionTypeId]" => "NA" }
   # add_field => { "[GuardRecord][exception][sqlString]" => "NA" }  
    # exception Fields  -- END 

    # time Fields  -- BEGIN 
    add_field => { "[GuardRecord][time][minDst]" => "0" }
    add_field => { "[GuardRecord][time][minOffsetFromGMT]" => "0" }
    # add_field => { "[GuardRecord][time][timestamp]" => "%{[event][created]}" }  
    # time Fields  -- END 
    
    # data Fields  -- BEGIN
    add_field => { "[GuardRecord][data][construct][fullSql]" => "%{[tmp_kv][cmd]}" }
    add_field => { "[GuardRecord][data][construct][redactedSensitiveDataSql]" => "%{[tmp_kv][cmd]}" }
    add_field => { "[GuardRecord][data][originalSqlCommand]" => "%{[tmp_kv][cmd]}" }
    # data Fields  -- END
  }

  ruby{
   code => '
     event.set("[GuardRecord][time][timestamp]", Time.parse(event.get("[event][created]")).to_i)
   '
  } 
 
  ruby {
    code => 
    '
      event.set("[GuardRecord][data][construct][sentences]", [{
        "verb" => "event.get(\"[tmp_kv][cmd]\")",
        "descendants" => [],
        "fields" => [],
        "objects" => [{
          "schema" => "",
          "fields" => [],
          "name" => "event.get(\"[url][path]\")",
          "type" => "FILE"
          }]
        }])
    '
  }    
  
  prune 
  {
    whitelist_names => ["GuardRecord"]
  }
 json_encode {
  source => "[GuardRecord]"
  target => "[GuardRecord]"
  }  
  
}


output {
  stdout { codec => json_lines}
}






